
uniform mat4 Projection;
uniform vec3 rotation;

in vec3 Vertex;
out vec3 cood;


mat4 rotationMatrix(vec3 axis, float angle)
{
    axis = normalize(axis);
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1.0 - c;
    
    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,
                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,
                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,
                0.0,                                0.0,                                0.0,                                1.0);
}

void main(void)
{
   cood = Vertex.xyz; 


  vec4 Vert = vec4(Vertex.x,Vertex.y, Vertex.z,1);

    gl_Position =   Projection * rotationMatrix(vec3(1,0,0),rotation.y ) *  
  rotationMatrix(vec3(0,1,0),rotation.x )*  
   rotationMatrix(vec3(0,0,1),rotation.z ) * Vert;
}
    